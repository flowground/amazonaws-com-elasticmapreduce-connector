{
    "title": "Amazon Elastic MapReduce",
    "description": "Amazon EMR is a web service that makes it easy to process large amounts of data efficiently. Amazon EMR uses Hadoop processing combined with several AWS products to do tasks such as web indexing, data mining, log file analysis, machine learning, scientific simulation, and data warehousing.",
    "docsUrl": "https://aws.amazon.com/elasticmapreduce/",
    "url": "https://api.apis.guru/v2/specs/amazonaws.com/elasticmapreduce/2009-03-31/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://elasticmapreduce.amazonaws.com/",
                    "http://elasticmapreduce.amazonaws.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_hmac": {
                "label": "Authorization (hmac)",
                "viewClass": "TextFieldView",
                "note": "Amazon Signature authorization v4"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "AddInstanceFleet": {
            "main": "./lib/actions/AddInstanceFleet.js",
            "title": "AddInstanceFleet",
            "description": "Adds an instance fleet to a running cluster.\n\nThe instance fleet configuration is available only in Amazon EMR versions 4.8.0\nand later, excluding 5.0.x.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AddInstanceFleet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AddInstanceGroups": {
            "main": "./lib/actions/AddInstanceGroups.js",
            "title": "AddInstanceGroups",
            "description": "Adds one or more instance groups to a running cluster.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AddInstanceGroups.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AddJobFlowSteps": {
            "main": "./lib/actions/AddJobFlowSteps.js",
            "title": "AddJobFlowSteps",
            "description": "AddJobFlowSteps adds new steps to a running cluster. A maximum of 256 steps are\nallowed in each job flow.\n\nIf your cluster is long-running (such as a Hive data warehouse) or complex, you\nmay require more than 256 steps to process your data. You can bypass the\n256-step limitation in various ways, including using SSH to connect to the\nmaster node and submitting queries directly to the software running on the\nmaster node, such as Hive and Hadoop. For more information on how to do this,\nsee Add More than 256 Steps to a Cluster\n[http://docs.aws.amazon.com/emr/latest/ManagementGuide/AddMoreThan256Steps.html] \nin the Amazon EMR Management Guide.\n\nA step specifies the location of a JAR file stored either on the master node of\nthe cluster or in Amazon S3. Each step is performed by the main function of the\nmain class of the JAR file. The main class can be specified either in the\nmanifest of the JAR or by using the MainFunction parameter of the step.\n\nAmazon EMR executes each step in the order listed. For a step to be considered\ncomplete, the main function must exit with a zero exit code and all Hadoop jobs\nstarted while the step was running must have completed and run successfully.\n\nYou can only add steps to a cluster that is in one of the following states:\nSTARTING, BOOTSTRAPPING, RUNNING, or WAITING.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AddJobFlowSteps.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AddTags": {
            "main": "./lib/actions/AddTags.js",
            "title": "AddTags",
            "description": "Adds tags to an Amazon EMR resource. Tags make it easier to associate clusters in various ways, such as grouping clusters to track your Amazon EMR resource allocation costs. For more information, see <a href=\"http://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-tags.html\">Tag Clusters</a>. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AddTags.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CancelSteps": {
            "main": "./lib/actions/CancelSteps.js",
            "title": "CancelSteps",
            "description": "Cancels a pending step or steps in a running cluster. Available only in Amazon EMR versions 4.8.0 and later, excluding version 5.0.0. A maximum of 256 steps are allowed in each CancelSteps request. CancelSteps is idempotent but asynchronous; it does not guarantee a step will be canceled, even if the request is successfully submitted. You can only cancel steps that are in a <code>PENDING</code> state.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CancelSteps.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateSecurityConfiguration": {
            "main": "./lib/actions/CreateSecurityConfiguration.js",
            "title": "CreateSecurityConfiguration",
            "description": "Creates a security configuration, which is stored in the service and can be specified when a cluster is created.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateSecurityConfiguration.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteSecurityConfiguration": {
            "main": "./lib/actions/DeleteSecurityConfiguration.js",
            "title": "DeleteSecurityConfiguration",
            "description": "Deletes a security configuration.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteSecurityConfiguration.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeCluster": {
            "main": "./lib/actions/DescribeCluster.js",
            "title": "DescribeCluster",
            "description": "Provides cluster-level details including status, hardware and software configuration, VPC settings, and so on. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeCluster.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeJobFlows": {
            "main": "./lib/actions/DescribeJobFlows.js",
            "title": "DescribeJobFlows",
            "description": "This API is deprecated and will eventually be removed. We recommend you use \nListClusters, DescribeCluster, ListSteps, ListInstanceGroups and \nListBootstrapActions instead.\n\nDescribeJobFlows returns a list of job flows that match all of the supplied\nparameters. The parameters can include a list of job flow IDs, job flow states,\nand restrictions on job flow creation date and time.\n\nRegardless of supplied parameters, only job flows created within the last two\nmonths are returned.\n\nIf no parameters are supplied, then job flows matching either of the following\ncriteria are returned:\n\n *  Job flows created and completed in the last two weeks\n   \n   \n *   Job flows created within the last two months that are in one of the\n   following states: RUNNING, WAITING, SHUTTING_DOWN, STARTING \n   \n   \n\nAmazon EMR can return a maximum of 512 job flow descriptions.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeJobFlows.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeSecurityConfiguration": {
            "main": "./lib/actions/DescribeSecurityConfiguration.js",
            "title": "DescribeSecurityConfiguration",
            "description": "Provides the details of a security configuration by returning the configuration JSON.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeSecurityConfiguration.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeStep": {
            "main": "./lib/actions/DescribeStep.js",
            "title": "DescribeStep",
            "description": "Provides more detail about the cluster step.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeStep.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListBootstrapActions": {
            "main": "./lib/actions/ListBootstrapActions.js",
            "title": "ListBootstrapActions",
            "description": "Provides information about the bootstrap actions associated with a cluster.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListBootstrapActions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListClusters": {
            "main": "./lib/actions/ListClusters.js",
            "title": "ListClusters",
            "description": "Provides the status of all clusters visible to this AWS account. Allows you to filter the list of clusters based on certain criteria; for example, filtering by cluster creation date and time or by status. This call returns a maximum of 50 clusters per call, but returns a marker to track the paging of the cluster list across multiple ListClusters calls.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListClusters.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListInstanceFleets": {
            "main": "./lib/actions/ListInstanceFleets.js",
            "title": "ListInstanceFleets",
            "description": "Lists all available details about the instance fleets in a cluster.\n\nThe instance fleet configuration is available only in Amazon EMR versions 4.8.0\nand later, excluding 5.0.x versions.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListInstanceFleets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListInstanceGroups": {
            "main": "./lib/actions/ListInstanceGroups.js",
            "title": "ListInstanceGroups",
            "description": "Provides all available details about the instance groups in a cluster.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListInstanceGroups.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListInstances": {
            "main": "./lib/actions/ListInstances.js",
            "title": "ListInstances",
            "description": "Provides information for all active EC2 instances and EC2 instances terminated in the last 30 days, up to a maximum of 2,000. EC2 instances in any of the following states are considered active: AWAITING_FULFILLMENT, PROVISIONING, BOOTSTRAPPING, RUNNING.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListInstances.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListSecurityConfigurations": {
            "main": "./lib/actions/ListSecurityConfigurations.js",
            "title": "ListSecurityConfigurations",
            "description": "Lists all the security configurations visible to this account, providing their creation dates and times, and their names. This call returns a maximum of 50 clusters per call, but returns a marker to track the paging of the cluster list across multiple ListSecurityConfigurations calls.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListSecurityConfigurations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListSteps": {
            "main": "./lib/actions/ListSteps.js",
            "title": "ListSteps",
            "description": "Provides a list of steps for the cluster in reverse order unless you specify stepIds with the request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListSteps.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ModifyInstanceFleet": {
            "main": "./lib/actions/ModifyInstanceFleet.js",
            "title": "ModifyInstanceFleet",
            "description": "Modifies the target On-Demand and target Spot capacities for the instance fleet\nwith the specified InstanceFleetID within the cluster specified using ClusterID.\nThe call either succeeds or fails atomically.\n\nThe instance fleet configuration is available only in Amazon EMR versions 4.8.0\nand later, excluding 5.0.x versions.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ModifyInstanceFleet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ModifyInstanceGroups": {
            "main": "./lib/actions/ModifyInstanceGroups.js",
            "title": "ModifyInstanceGroups",
            "description": "ModifyInstanceGroups modifies the number of nodes and configuration settings of an instance group. The input parameters include the new target instance count for the group and the instance group ID. The call will either succeed or fail atomically.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ModifyInstanceGroups.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutAutoScalingPolicy": {
            "main": "./lib/actions/PutAutoScalingPolicy.js",
            "title": "PutAutoScalingPolicy",
            "description": "Creates or updates an automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster. The automatic scaling policy defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutAutoScalingPolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RemoveAutoScalingPolicy": {
            "main": "./lib/actions/RemoveAutoScalingPolicy.js",
            "title": "RemoveAutoScalingPolicy",
            "description": "Removes an automatic scaling policy from a specified instance group within an EMR cluster.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RemoveAutoScalingPolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RemoveTags": {
            "main": "./lib/actions/RemoveTags.js",
            "title": "RemoveTags",
            "description": "Removes tags from an Amazon EMR resource. Tags make it easier to associate\nclusters in various ways, such as grouping clusters to track your Amazon EMR\nresource allocation costs. For more information, see Tag Clusters\n[http://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-tags.html]. \n\nThe following example removes the stack tag with value Prod from a cluster:",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RemoveTags.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RunJobFlow": {
            "main": "./lib/actions/RunJobFlow.js",
            "title": "RunJobFlow",
            "description": "RunJobFlow creates and starts running a new cluster (job flow). The cluster runs\nthe steps specified. After the steps complete, the cluster stops and the HDFS\npartition is lost. To prevent loss of data, configure the last step of the job\nflow to store results in Amazon S3. If the JobFlowInstancesConfig \nKeepJobFlowAliveWhenNoSteps parameter is set to TRUE, the cluster transitions to\nthe WAITING state rather than shutting down after the steps have completed. \n\nFor additional protection, you can set the JobFlowInstancesConfig \nTerminationProtected parameter to TRUE to lock the cluster and prevent it from\nbeing terminated by API call, user intervention, or in the event of a job flow\nerror.\n\nA maximum of 256 steps are allowed in each job flow.\n\nIf your cluster is long-running (such as a Hive data warehouse) or complex, you\nmay require more than 256 steps to process your data. You can bypass the\n256-step limitation in various ways, including using the SSH shell to connect to\nthe master node and submitting queries directly to the software running on the\nmaster node, such as Hive and Hadoop. For more information on how to do this,\nsee Add More than 256 Steps to a Cluster\n[http://docs.aws.amazon.com/emr/latest/ManagementGuide/AddMoreThan256Steps.html] \nin the Amazon EMR Management Guide.\n\nFor long running clusters, we recommend that you periodically store your\nresults.\n\nThe instance fleets configuration is available only in Amazon EMR versions 4.8.0\nand later, excluding 5.0.x versions. The RunJobFlow request can contain\nInstanceFleets parameters or InstanceGroups parameters, but not both.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RunJobFlow.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SetTerminationProtection": {
            "main": "./lib/actions/SetTerminationProtection.js",
            "title": "SetTerminationProtection",
            "description": "SetTerminationProtection locks a cluster (job flow) so the EC2 instances in the\ncluster cannot be terminated by user intervention, an API call, or in the event\nof a job-flow error. The cluster still terminates upon successful completion of\nthe job flow. Calling SetTerminationProtection on a cluster is similar to\ncalling the Amazon EC2 DisableAPITermination API on all EC2 instances in a\ncluster.\n\n SetTerminationProtection is used to prevent accidental termination of a cluster\nand to ensure that in the event of an error, the instances persist so that you\ncan recover any data stored in their ephemeral instance storage.\n\n To terminate a cluster that has been locked by setting SetTerminationProtection \nto true, you must first unlock the job flow by a subsequent call to \nSetTerminationProtection in which you set the value to false. \n\n For more information, seeManaging Cluster Termination\n[http://docs.aws.amazon.com/emr/latest/ManagementGuide/UsingEMR_TerminationProtection.html] \nin the Amazon EMR Management Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SetTerminationProtection.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SetVisibleToAllUsers": {
            "main": "./lib/actions/SetVisibleToAllUsers.js",
            "title": "SetVisibleToAllUsers",
            "description": "Sets whether all AWS Identity and Access Management (IAM) users under your account can access the specified clusters (job flows). This action works on running clusters. You can also set the visibility of a cluster when you launch it using the <code>VisibleToAllUsers</code> parameter of <a>RunJobFlow</a>. The SetVisibleToAllUsers action can be called only by an IAM user who created the cluster or the AWS account that owns the cluster.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SetVisibleToAllUsers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TerminateJobFlows": {
            "main": "./lib/actions/TerminateJobFlows.js",
            "title": "TerminateJobFlows",
            "description": "TerminateJobFlows shuts a list of clusters (job flows) down. When a job flow is\nshut down, any step not yet completed is canceled and the EC2 instances on which\nthe cluster is running are stopped. Any log files not already saved are uploaded\nto Amazon S3 if a LogUri was specified when the cluster was created.\n\nThe maximum number of clusters allowed is 10. The call to TerminateJobFlows is\nasynchronous. Depending on the configuration of the cluster, it may take up to\n1-5 minutes for the cluster to completely terminate and release allocated\nresources, such as Amazon EC2 instances.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TerminateJobFlows.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}